= Table Flipper v${project.version}
:toc:
:sectlinks:
:sectanchors:
:icons: font
ifdef::env-github[]
:tip-caption: :bulb:
:note-caption: :information_source:
:important-caption: :heavy_exclamation_mark:
:warning-caption: :warning:
:caution-caption: :fire:
endif::[]
${auto-gen-notice}

== Info

image:https://travis-ci.org/danlangford/tableflipper.svg?branch=master["Build Status", link="https://travis-ci.org/danlangford/tableflipper"]

A way for Dungeon Masters to collect, build, and roll on their collection of favorite tables.
the recursive template feature allows table results to mention dice rolls or other table results that all get resolved into one nice easy to read message.
currently it loads up tables from the 5e SRD.

== For Users (a la DMs)

If you have Java 11 installed then this should be as easy as getting the latest https://github.com/danlangford/tableflipper/releases[release]. Start with the __tableflipper-ui-x.y.z.jar__ package. If double clicking it does not run the jar then on a command line try `java -jar tableflipper-ui-x.y.z.jar`

You can place your own table yaml files in a subdirectory of your home directory called `tableflipper`.

The structure of these files are "Tables" and "Descriptions" here is a very simple table yaml file.

simpleExample.yaml
[source,yaml]
----
tables:
  encounter:
    roll: 1d20
    results:
      1-17: nothing happens
      18-20: you encounter <table wandering>
  wandering:
    roll: 1d12
    results:
      1-4: <roll 1d2+1> firesnake(s)
      5-9: <roll 2d4> <table mephitType> mephits
      10-11: <desc azer>
      12: <desc gargoyle>
  mephitType:
    roll: 1d6
    results:
      1: mud
      2: smoke
      3: steam
      4: dust
      5: ice
      6: magma

descriptions:
  azer: an Azer shedding bright light in 10 foot radius and weilding its Hammer in both hands looking quite menacing
  gargoyle: a gargoyle surrounded by <roll 2d6> dead rodents. When the gargoyle becomes bloodied then <table encounter>. Treasure is a jar full of <table mephitType> and <roll 3d4> sp
----

== For Devs

=== Tour

the `core` sub module is the meat and potatoes of the Table Flipping

the `cli` sub module is a command line interface

the `ui` sub module is a JavaFX interface

the `*-fatjar` modules bundle all dependencies into a single jar that is easier to run

the `*-jlink` modules were an attempt to use the new `jlink` feature and bundle the necessary JRE/JVM components into a single executable.

interesting Entry points (Main methods) to run:

    dan.langford.tableflipper.cli.TableFlipperCli
    dan.langford.tableflipper.ui.TableFlipperApp

=== Requirements
    
you will need Java 11+ to run this. Maven 3.6+ is required to build this and that should be taken care of by the included maven wrapper `./mvnw`

TIP: you can obtain Java 11 from https://adoptopenjdk.net/[AdoptOpenJDK], https://sdkman.io/[sdkman], or https://brew.sh/[Homebrew].

=== Getting Started

run

    ./mvnw package

look for output

    [INFO] ----------------------------------------------------
    [INFO] Reactor Summary for tableflipper ${project.version}:
    [INFO]
    [INFO] tableflipper ................... SUCCESS [  1.992 s]
    [INFO] tableflipper-core .............. SUCCESS [  2.285 s]
    [INFO] tableflipper-cli ............... SUCCESS [  0.264 s]
    [INFO] tableflipper-ui ................ SUCCESS [  0.305 s]
    [INFO] tableflipper-cli-fatjar ........ SUCCESS [  2.131 s]
    [INFO] tableflipper-ui-fatjar ......... SUCCESS [  2.623 s]
    [INFO] ----------------------------------------------------
    [INFO] BUILD SUCCESS
    [INFO] ----------------------------------------------------
 
now you can run

    java -jar target/tableflipper-cli-${project.version}.jar

or

    java -jar target/tableflipper-ui-${project.version}.jar

and copy those JARs to wherever you need them.

and at least in MacOS I can just double click the `tableflipper-ui-${project.version}.jar` to have it executed.

=== Advanced

by default the builds run with `multiplatform` profile enabled to have the ui fatjar include all the javafx graphics for all three platforms. if you would like to save just a few MB you can disable that.

    ./mvnw package -P !multiplatform

_Dan "8bagels" Langford_
